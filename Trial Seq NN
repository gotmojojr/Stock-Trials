#NN that identifies basic shapes
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'

import tensorflow as tf
import pandas as pd
import numpy as np
from tensorflow import keras
from keras import layers
from tensorflow.keras.datasets import mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train = x_train.reshape(-1,28*28).astype("float32") / 255.0
x_test= x_test.reshape(-1,28*28).astype("float32") / 255.0

# Sequential API allows us to create basic NN. It's very convenient but not very flexible.
# Only allows single input to single output
# Functional API is more flexible. Handles multiple input & output
model = keras.Sequential(
    [
        layers.Dense(512, activation='relu'),
        layers.Dense(256, activation='relu'),
        layers.Dense(10)
    ]
)

# Compile helps us configure our model
model.compile(
    loss = keras.losses.SparseCategoricalCrossentropy(from_logits=True),
    optimizer=keras.optimizers.Adam(learning_rate=0.001),
    metrics = ['accuracy'], #Helps the model keep track of the metric we care about
)

#Train model
model.fit(x_train,y_train,batch_size=32,epochs=5,verbose=2)
model.evaluate(x_test,y_test,batch_size=32,verbose=2)
